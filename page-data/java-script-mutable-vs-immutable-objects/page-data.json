{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/java-script-mutable-vs-immutable-objects","result":{"data":{"post":{"__typename":"MdxPost","slug":"/java-script-mutable-vs-immutable-objects","title":"[JavaScript] Mutable vs Immutable Objects","date":"21.11.2020","tags":[{"name":"JavaScript","slug":"java-script"}],"description":"介紹JavaScript中很重要的觀念 - **Mutable 及 Immutable Objects**，並以範例解釋他們的差別。","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[JavaScript] Mutable vs Immutable Objects\",\n  \"date\": \"2020-11-21T00:00:00.000Z\",\n  \"description\": \"介紹JavaScript中很重要的觀念 - **Mutable 及 Immutable Objects**，並以範例解釋他們的差別。\",\n  \"tags\": [\"JavaScript\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u524D\\u8A00\"), mdx(\"p\", null, \"\\u4ECB\\u7D39JavaScript\\u4E2D\\u5F88\\u91CD\\u8981\\u7684\\u89C0\\u5FF5 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Mutable \\u53CA Immutable Objects\"), \"\\uFF0C\\u4E26\\u4EE5\\u7BC4\\u4F8B\\u89E3\\u91CB\\u4ED6\\u5011\\u7684\\u5DEE\\u5225\\u3002\"), mdx(\"h2\", null, \"Immutable object\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u6240\\u6709\\u7684\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Glossary/Primitive\"\n  }), \"\\u539F\\u59CB\\u8CC7\\u6599\\u578B\\u614B(primitive)\"), \"\\uFF0C\\u5305\\u542B null, undefined, string, number, boolean, symbol, bigint\\uFF0C\\u90FD\\u662Fimmutable\\u3002\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"immutable object\\u662F\\u900F\\u904Ecall by value\\u7684\\u65B9\\u5F0F\\uFF0C\\u6703\\u6307\\u5411\\u65B0\\u5206\\u914D\\u7684\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\u518D\\u5B58\\u5165\\u503C\\uFF0C\\u56E0\\u6B64object\\u5728\\u5EFA\\u7ACB\\u4E4B\\u5F8C\\u5C31\\u4E0D\\u53EF\\u518D\\u88AB\\u6539\\u8B8A\\u3002\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u7576\\u91CD\\u65B0\\u8CE6\\u503C\\u6642\\uFF0C\\u6703\\u6307\\u5411\\u65B0\\u5206\\u914D\\u7684\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\uFF0C\\u800C\\u975E\\u76F4\\u63A5\\u6539\\u8B8A\\u8A18\\u61B6\\u9AD4\\u88E1\\u7684\\u503C\\uFF0C\\u539F\\u672C\\u7684\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\u6703\\u88ABgarbage collection\\uFF0C\\u63DB\\u53E5\\u8A71\\u8AAA\\u4ED6\\u662F\\u88AB\\u53D6\\u4EE3\\u800C\\u4E0D\\u662F\\u76F4\\u63A5\\u88AB\\u4FEE\\u6539\\u3002\")), mdx(\"p\", null, \"\\uD83C\\uDF30 #1\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"let a = 1; // \\u5EFA\\u7ACB\\u4E00\\u500Bimmutable object a\\nlet b = a; // \\u5275\\u5EFA\\u4E00\\u500B\\u65B0\\u7684\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\uFF0Ccall by value a\\u7684\\u503C\\u5B58\\u51651\\uFF0Cb\\u6307\\u5411\\u9019\\u500B\\u65B0\\u7684\\u4F4D\\u7F6E\\nb = a + 1; // \\u5275\\u5EFA\\u4E00\\u500B\\u65B0\\u7684\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\uFF0Ccall by value a\\u7684\\u503C\\u5B58\\u51651+1=2\\uFF0Cb\\u6307\\u5411\\u9019\\u500B\\u65B0\\u7684\\u4F4D\\u7F6E\\uFF0C\\u56E0\\u6B64a\\u4E0D\\u6703\\u88AB+1\\nconsole.log(a, b); // 1 2 -> \\u56E0\\u70BA\\u662F\\u4E0D\\u540C\\u7684\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\uFF0C\\u6539\\u8B8Ab\\u4E5F\\u4E0D\\u6703\\u5F71\\u97FF\\u5230a\\na = 3; // a\\u6307\\u5411\\u65B0\\u5206\\u914D\\u7684\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\u88E1\\u9762\\u5B58\\u653E3\\uFF0C\\u539F\\u5148\\u5B58\\u653E1\\u7684\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\u5247\\u6703\\u88AB\\u5783\\u573E\\u56DE\\u6536\\n\")), mdx(\"p\", null, \"\\uD83C\\uDF30 #2\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function swap(a, b) {\\n  let temp = a;\\n  a = b;\\n  b = temp;\\n}\\n\\nlet x = 10;\\nlet y = 20;\\nswap(x, y);\\nconsole.log(x, y) // 10 20 -> a b\\u662Fcall by value\\uFF0C\\u56E0\\u6B64\\u4EA4\\u63DB\\u4E26\\u4E0D\\u6703\\u5F71\\u97FF\\u5230\\u50B3\\u5165\\u7684x y\\n\")), mdx(\"h2\", null, \"Mutable object\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u9664\\u4E86primitive\\u4E4B\\u5916\\u7684object, array\\u90FD\\u662Fmutable\\u3002\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mutable object\\u662F\\u900F\\u904Ecall by sharing\\u7684\\u65B9\\u5F0F\\uFF0C\\u5171\\u4EAB\\u540C\\u4E00\\u500B\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\uFF0C\\u56E0\\u6B64object\\u5EFA\\u7ACB\\u4E4B\\u5F8C\\u53EF\\u518D\\u88AB\\u6539\\u8B8A\\u3002\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u9700\\u8981\\u6CE8\\u610F\\u7684\\u662F\\uFF0C\\u7576\\u91CD\\u65B0\\u8CE6\\u503C\\u6642\\uFF0C\\u4ECD\\u6703\\u6307\\u5411\\u65B0\\u5206\\u914D\\u7684\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\uFF0C\\u7D50\\u675F\\u539F\\u672C\\u7684\\u8A18\\u61B6\\u9AD4\\u5171\\u4EAB\\uFF0C\\u56E0\\u6B64\\u539F\\u672C\\u7684object\\u4E0D\\u6703\\u88AB\\u6539\\u8B8A\\u3002\")), mdx(\"p\", null, \"\\uD83C\\uDF30 #1\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"let a = {number: 0}; // \\u5EFA\\u7ACB\\u4E00\\u500Bmutable object a\\nlet b = a; // call by sharing\\uFF0Cb\\u8207a\\u5171\\u4EAB\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\nb.number++;\\nconsole.log(b); // {number: 1}\\nconsole.log(a); // {number: 1} -> \\u6539\\u8B8Ab\\u7684\\u540C\\u6642a\\u4E5F\\u88AB\\u6539\\u8B8A\\u4E86\\nb = {age: 27}; // \\u5C0Db\\u91CD\\u65B0\\u8CE6\\u503C\\uFF0Cb\\u6307\\u5411\\u65B0\\u7684\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\uFF0C\\u7D50\\u675F\\u8207a\\u5171\\u4EAB\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\nconsole.log(a); // {number: 1} -> a\\u4E0D\\u6703\\u88AB\\u6539\\u8B8A\\n\")), mdx(\"p\", null, \"\\uD83C\\uDF30 #2\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function add(obj) {\\n  obj.number++;\\n}\\n\\nlet o = {number: 10};\\nadd(o);\\nconsole.log(o.number); // 11 -> o\\u8207obj\\u5171\\u4EAB\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\uFF0C\\u56E0\\u6B64\\u6539\\u8B8Aobj\\u7684\\u53C3\\u6578\\u4E5F\\u540C\\u6642\\u6703\\u6539\\u8B8Ao\\u7684\\u53C3\\u6578\\n\\nfunction add(obj) {\\n  obj = {\\n    number: obj.number + 1\\n  }; // \\u5C0Dobj\\u91CD\\u65B0\\u8CE6\\u503C\\uFF0Cobj\\u6307\\u5411\\u65B0\\u7684\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\uFF0C\\u7D50\\u675F\\u8207o\\u5171\\u4EAB\\u8A18\\u61B6\\u9AD4\\u4F4D\\u7F6E\\n}\\n\\nlet o = {number: 10};\\nadd(o)\\nconsole.log(o.number); // 10 -> o\\u7DAD\\u6301\\u4E00\\u6A23\\u7684\\u503C\\n\")), mdx(\"p\", null, \"Reference:\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Glossary/Mutable\"\n  }), \"https://developer.mozilla.org/en-US/docs/Glossary/Mutable\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://blog.techbridge.cc/2018/06/23/javascript-call-by-value-or-reference/\"\n  }), \"https://blog.techbridge.cc/2018/06/23/javascript-call-by-value-or-reference/\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"前言 介紹JavaScript中很重要的觀念  Mutable 及 Immutable Objects ，並以範例解釋他們的差別。 Immutable object 所有的 原始資料型態(primitive) ，包含 null, undefined, string, number…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/java-script-mutable-vs-immutable-objects","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}